//HintName: SpreadsheetExtensions.g.cs
// <auto-generated />
#nullable enable
using System.Buffers;
using System.Threading;
using System.Threading.Tasks;

namespace SpreadCheetah
{
    public static class SpreadsheetExtensions
    {
        /// <summary>
        /// Add object as a row in the active worksheet.
        /// Each property with a public getter on the object will be added as a cell in the row.
        /// The method is generated by a source generator.
        /// </summary>
        public static async ValueTask AddAsRowAsync(this Spreadsheet spreadsheet, SpreadCheetah.SourceGenerator.SnapshotTest.Models.ClassWithSingleProperty obj, CancellationToken token = default)
        {
            if (spreadsheet is null) throw new ArgumentNullException(nameof(spreadsheet));
            if (obj is null) throw new ArgumentNullException(nameof(obj));
            var cells = ArrayPool<DataCell>.Shared.Rent(1);
            try
            {
                cells[0] = new DataCell(obj.Name);
                await spreadsheet.AddRowAsync(cells.AsMemory(0, 1), token).ConfigureAwait(false);
            }
            finally
            {
                ArrayPool<DataCell>.Shared.Return(cells, true);
            }
        }
    }
}
